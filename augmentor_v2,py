import imgaug as ia
from imgaug import augmenters as iaa
import imageio
import os
import shutil

def augment_images(input_path, output_path, num_augmented_images):
    # Create an imgaug augmenter
    seq = iaa.Sequential([
        # iaa.Affine(rotate=(-5, 5)),
        iaa.Fliplr(0.5),
        iaa.Crop(percent=(0, 0.3)),
        # Add more augmentations as needed
    ])

    # Get a list of the original image filenames
    original_images = [file for file in os.listdir(input_path) if file.lower().endswith(('.png', '.jpg', '.jpeg', '.gif', '.bmp'))]

    # Augment and save images
    for i, original_image_name in enumerate(original_images):
        original_image_path = os.path.join(input_path, original_image_name)

        # Read the image using imageio
        image = imageio.imread(original_image_path)

        # Apply augmentation
        augmented_images = seq.augment_images([image] * num_augmented_images)

        # Save augmented images with desired names
        for j, augmented_image in enumerate(augmented_images):
            base_name, original_extension = os.path.splitext(original_image_name)
            new_image_name = f"{base_name}_{i + 1}_{j + 1}{original_extension}"
            new_image_path = os.path.join(output_path, new_image_name)
            imageio.imwrite(new_image_path, augmented_image)
            print(f"new_image_name : {new_image_name}")

if __name__ == "__main__":
    input_folder = "resource/images"
    output_folder = "resource/images/output"
    num_augmented_images = 5  # Adjust as needed

    augment_images(input_folder, output_folder, num_augmented_images)
